"use strict";angular.module("time-input",[]).directive("timeInput",[function(){return{template:'<input type="number" class="hours" placeholder="HH" min="0" max="23"><span class="separator"></span><input type="number" class="minutes" placeholder="MM" min="0" max="59"><span class="separator"></span><input type="number" class="seconds" placeholder="SS" min="0" max="59">',restrict:"C",require:"ngModel",scope:{options:"=?",disabled:"=?"},controller:["$scope",function($scope){$scope.options=$scope.options||{},"undefined"==typeof $scope.options.liveUpdate&&($scope.options.liveUpdate=!1),"undefined"==typeof $scope.options.hours&&($scope.options.hours=!0),"undefined"==typeof $scope.options.minutes&&($scope.options.minutes=!0),"undefined"==typeof $scope.options.seconds&&($scope.options.seconds=!0)}],link:function(scope,element,attrs,ngModel){function leadingZero(value){return value=parseInt(value,10),value<10?"0"+value:""+value}function updateModel(){for(i=0;i<inputTypes.length;i++)inputType=inputTypes[i],setFunc=setFuncs[i],scope.options[inputType]!==!1&&ngModel.$viewValue[setFunc](parseInt(inputs[inputType].val(),10));ngModel.$setViewValue(ngModel.$viewValue),ngModel.$commitViewValue()}function inputChange(elem){return function(){if(!elem.value||isNaN(elem.value))return elem.value="00",updateModel(),void $(elem).select();var numValue=parseInt(elem.value,10),maxValue=parseInt(elem.getAttribute("max"),10);numValue>maxValue&&(elem.value=maxValue),scope.options.liveUpdate===!0&&updateModel()}}function selectNext($elm){$elm.get(0).disableKeyUp=!0,setTimeout(function(){$elm.get(0).disableKeyUp=!1},250),$elm.focus().select()}function onKeyUp($nextInput){return function(event){if(event.target.disableKeyUp!==!0){var key=keyboardMap[event.keyCode],permitted=["1","2","3","4","5","6","7","8","9","0","NUMPAD1","NUMPAD2","NUMPAD3","NUMPAD4","NUMPAD5","NUMPAD6","NUMPAD7","NUMPAD8","NUMPAD9","NUMPAD0"];"ENTER"===key?$nextInput?selectNext($nextInput):event.target.blur():$nextInput&&permitted.indexOf(key)>=0&&event.target.value.length>1&&selectNext($nextInput)}}}function onBlurInput(){element.removeClass("focused"),this.value=leadingZero(Number(this.value)),updateModel()}var i,inputType,getFunc,setFunc,nextInput,inputTypes=["hours","minutes","seconds"],getFuncs=["getHours","getMinutes","getSeconds"],setFuncs=["setHours","setMinutes","setSeconds"],$separators=element.find("span.separator"),$inputs=element.find("input"),inputs={};for($inputs.on("click",function(){this.select()}),$inputs.on("focus",function(){element.addClass("focused")}),$inputs.on("mousewheel",function(){}),$inputs.on("keydown",function(event){var key=keyboardMap[event.keyCode],permitted=["1","2","3","4","5","6","7","8","9","0","NUMPAD1","NUMPAD2","NUMPAD3","NUMPAD4","NUMPAD5","NUMPAD6","NUMPAD7","NUMPAD8","NUMPAD9","NUMPAD0","LEFT","RIGHT","UP","DOWN","DELETE","BACKSPACE","ENTER","SHIFT","TAB"];permitted.indexOf(key)===-1&&event.preventDefault()}),$inputs.on("paste cut",function(event){event.preventDefault()}),ngModel.$render=function(){var date=ngModel.$viewValue;for(i=0;i<inputTypes.length;i++)inputType=inputTypes[i],getFunc=getFuncs[i],scope.options[inputType]!==!1&&inputs[inputType].val(leadingZero(date[getFunc]()))},scope.$watch("disabled",function(value){if(value)for(i=0;i<inputTypes.length;i++)inputType=inputTypes[i],scope.options[inputType]!==!1&&(element.addClass("disabled"),inputs[inputType].attr("disabled","disabled"));else for(i=0;i<inputTypes.length;i++)inputType=inputTypes[i],scope.options[inputType]!==!1&&(element.removeClass("disabled"),inputs[inputType].removeAttr("disabled"))}),i=0;i<inputTypes.length;i++)inputType=inputTypes[i],inputs[inputType]=$inputs.eq(i);for(i=0;i<inputTypes.length;i++)inputType=inputTypes[i],scope.options[inputType]===!1&&(inputs[inputType].remove(),0===i?$separators.eq(0).remove():2===i&&$separators.eq(1).remove()),scope.options[inputType]!==!1&&(inputs[inputType].on("input",inputChange(inputs[inputType].get(0))),nextInput=inputTypes[i+1],inputs[nextInput]&&scope.options[nextInput]!==!1?inputs[inputType].on("keyup",onKeyUp(inputs[inputTypes[i+1]])):inputs[inputType].on("keyup",onKeyUp()),inputs[inputType].on("blur",onBlurInput.bind(inputs[inputType].get(0))))}}}]);
//# sourceMappingURL=time-input.min.js.map